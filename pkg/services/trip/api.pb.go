// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: pkg/services/trip/api.proto

package trip_service

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId int64 `protobuf:"varint,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TripRequest) Reset() {
	*x = TripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripRequest) ProtoMessage() {}

func (x *TripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripRequest.ProtoReflect.Descriptor instead.
func (*TripRequest) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{0}
}

func (x *TripRequest) GetTripId() int64 {
	if x != nil {
		return x.TripId
	}
	return 0
}

func (x *TripRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type Sight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Country     string   `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Rating      float32  `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Tags        []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Description string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Photos      []string `protobuf:"bytes,7,rep,name=photos,proto3" json:"photos,omitempty"`
	Day         int64    `protobuf:"varint,8,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *Sight) Reset() {
	*x = Sight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sight) ProtoMessage() {}

func (x *Sight) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sight.ProtoReflect.Descriptor instead.
func (*Sight) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{1}
}

func (x *Sight) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Sight) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sight) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Sight) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Sight) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Sight) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Sight) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *Sight) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

type Trip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Sights      []*Sight `protobuf:"bytes,4,rep,name=sights,proto3" json:"sights,omitempty"`
}

func (x *Trip) Reset() {
	*x = Trip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{2}
}

func (x *Trip) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Trip) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Trip) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Trip) GetSights() []*Sight {
	if x != nil {
		return x.Sights
	}
	return nil
}

type ModifyTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trip   *Trip `protobuf:"bytes,1,opt,name=trip,proto3" json:"trip,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ModifyTripRequest) Reset() {
	*x = ModifyTripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyTripRequest) ProtoMessage() {}

func (x *ModifyTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyTripRequest.ProtoReflect.Descriptor instead.
func (*ModifyTripRequest) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{3}
}

func (x *ModifyTripRequest) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

func (x *ModifyTripRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AlbumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId int64 `protobuf:"varint,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AlbumRequest) Reset() {
	*x = AlbumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumRequest) ProtoMessage() {}

func (x *AlbumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumRequest.ProtoReflect.Descriptor instead.
func (*AlbumRequest) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{4}
}

func (x *AlbumRequest) GetAlbumId() int64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *AlbumRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type Album struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TripId      int64    `protobuf:"varint,2,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	Author      int64    `protobuf:"varint,7,opt,name=author,proto3" json:"author,omitempty"`
	Title       string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Names       []string `protobuf:"bytes,5,rep,name=names,proto3" json:"names,omitempty"`
	Photos      []string `protobuf:"bytes,6,rep,name=photos,proto3" json:"photos,omitempty"`
}

func (x *Album) Reset() {
	*x = Album{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{5}
}

func (x *Album) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Album) GetTripId() int64 {
	if x != nil {
		return x.TripId
	}
	return 0
}

func (x *Album) GetAuthor() int64 {
	if x != nil {
		return x.Author
	}
	return 0
}

func (x *Album) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Album) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Album) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *Album) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

type ModifyAlbumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album  *Album `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ModifyAlbumRequest) Reset() {
	*x = ModifyAlbumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyAlbumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyAlbumRequest) ProtoMessage() {}

func (x *ModifyAlbumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyAlbumRequest.ProtoReflect.Descriptor instead.
func (*ModifyAlbumRequest) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{6}
}

func (x *ModifyAlbumRequest) GetAlbum() *Album {
	if x != nil {
		return x.Album
	}
	return nil
}

func (x *ModifyAlbumRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SightsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId int64 `protobuf:"varint,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
}

func (x *SightsRequest) Reset() {
	*x = SightsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SightsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SightsRequest) ProtoMessage() {}

func (x *SightsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SightsRequest.ProtoReflect.Descriptor instead.
func (*SightsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{7}
}

func (x *SightsRequest) GetTripId() int64 {
	if x != nil {
		return x.TripId
	}
	return 0
}

type Sights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *Sights) Reset() {
	*x = Sights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sights) ProtoMessage() {}

func (x *Sights) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sights.ProtoReflect.Descriptor instead.
func (*Sights) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{8}
}

func (x *Sights) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ByUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ByUserRequest) Reset() {
	*x = ByUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByUserRequest) ProtoMessage() {}

func (x *ByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByUserRequest.ProtoReflect.Descriptor instead.
func (*ByUserRequest) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{9}
}

func (x *ByUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type Trips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trips []*Trip `protobuf:"bytes,1,rep,name=trips,proto3" json:"trips,omitempty"`
}

func (x *Trips) Reset() {
	*x = Trips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trips) ProtoMessage() {}

func (x *Trips) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trips.ProtoReflect.Descriptor instead.
func (*Trips) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{10}
}

func (x *Trips) GetTrips() []*Trip {
	if x != nil {
		return x.Trips
	}
	return nil
}

type Albums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums []*Album `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
}

func (x *Albums) Reset() {
	*x = Albums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_services_trip_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Albums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Albums) ProtoMessage() {}

func (x *Albums) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_trip_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Albums.ProtoReflect.Descriptor instead.
func (*Albums) Descriptor() ([]byte, []int) {
	return file_pkg_services_trip_api_proto_rawDescGZIP(), []int{11}
}

func (x *Albums) GetAlbums() []*Album {
	if x != nil {
		return x.Albums
	}
	return nil
}

var File_pkg_services_trip_api_proto protoreflect.FileDescriptor

var file_pkg_services_trip_api_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74,
	0x72, 0x69, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x1a, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x51, 0x0a, 0x0b, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x74, 0x72, 0x69,
	0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x05, 0x53, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x8f, 0x01, 0x0a, 0x04, 0x54, 0x72, 0x69, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x20, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x06, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x66, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04,
	0x74, 0x72, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x52, 0x04, 0x74, 0x72, 0x69, 0x70, 0x12, 0x20, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x54, 0x0a, 0x0c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x61, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0d, 0x53, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x72,
	0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x72, 0x69,
	0x70, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x28, 0x0a, 0x0d, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x05, 0x54, 0x72, 0x69,
	0x70, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x72, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x52, 0x05,
	0x74, 0x72, 0x69, 0x70, 0x73, 0x22, 0x3e, 0x0a, 0x06, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12,
	0x34, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x06, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x73, 0x32, 0xab, 0x07, 0x0a, 0x0b, 0x54, 0x72, 0x69, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70,
	0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69,
	0x70, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x54, 0x72, 0x69, 0x70, 0x12, 0x28,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x72, 0x69,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x72, 0x69, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x69, 0x70, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x12, 0x22, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72,
	0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x73,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x23,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12,
	0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74,
	0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x79, 0x54, 0x72,
	0x69, 0x70, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72,
	0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72,
	0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x22, 0x00, 0x42, 0x2d, 0x5a, 0x2b, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x61, 0x6c, 0x69, 0x76,
	0x65, 0x2f, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x74, 0x72, 0x69, 0x70, 0x3b, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_services_trip_api_proto_rawDescOnce sync.Once
	file_pkg_services_trip_api_proto_rawDescData = file_pkg_services_trip_api_proto_rawDesc
)

func file_pkg_services_trip_api_proto_rawDescGZIP() []byte {
	file_pkg_services_trip_api_proto_rawDescOnce.Do(func() {
		file_pkg_services_trip_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_services_trip_api_proto_rawDescData)
	})
	return file_pkg_services_trip_api_proto_rawDescData
}

var file_pkg_services_trip_api_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pkg_services_trip_api_proto_goTypes = []interface{}{
	(*TripRequest)(nil),        // 0: services.trip_service.TripRequest
	(*Sight)(nil),              // 1: services.trip_service.Sight
	(*Trip)(nil),               // 2: services.trip_service.Trip
	(*ModifyTripRequest)(nil),  // 3: services.trip_service.ModifyTripRequest
	(*AlbumRequest)(nil),       // 4: services.trip_service.AlbumRequest
	(*Album)(nil),              // 5: services.trip_service.Album
	(*ModifyAlbumRequest)(nil), // 6: services.trip_service.ModifyAlbumRequest
	(*SightsRequest)(nil),      // 7: services.trip_service.SightsRequest
	(*Sights)(nil),             // 8: services.trip_service.Sights
	(*ByUserRequest)(nil),      // 9: services.trip_service.ByUserRequest
	(*Trips)(nil),              // 10: services.trip_service.Trips
	(*Albums)(nil),             // 11: services.trip_service.Albums
	(*empty.Empty)(nil),        // 12: google.protobuf.Empty
}
var file_pkg_services_trip_api_proto_depIdxs = []int32{
	1,  // 0: services.trip_service.Trip.sights:type_name -> services.trip_service.Sight
	2,  // 1: services.trip_service.ModifyTripRequest.trip:type_name -> services.trip_service.Trip
	5,  // 2: services.trip_service.ModifyAlbumRequest.album:type_name -> services.trip_service.Album
	2,  // 3: services.trip_service.Trips.trips:type_name -> services.trip_service.Trip
	5,  // 4: services.trip_service.Albums.albums:type_name -> services.trip_service.Album
	0,  // 5: services.trip_service.TripService.GetTrip:input_type -> services.trip_service.TripRequest
	3,  // 6: services.trip_service.TripService.AddTrip:input_type -> services.trip_service.ModifyTripRequest
	3,  // 7: services.trip_service.TripService.UpdateTrip:input_type -> services.trip_service.ModifyTripRequest
	0,  // 8: services.trip_service.TripService.DeleteTrip:input_type -> services.trip_service.TripRequest
	9,  // 9: services.trip_service.TripService.GetTripsByUser:input_type -> services.trip_service.ByUserRequest
	4,  // 10: services.trip_service.TripService.GetAlbum:input_type -> services.trip_service.AlbumRequest
	6,  // 11: services.trip_service.TripService.AddAlbum:input_type -> services.trip_service.ModifyAlbumRequest
	6,  // 12: services.trip_service.TripService.UpdateAlbum:input_type -> services.trip_service.ModifyAlbumRequest
	4,  // 13: services.trip_service.TripService.DeleteAlbum:input_type -> services.trip_service.AlbumRequest
	7,  // 14: services.trip_service.TripService.SightsByTrip:input_type -> services.trip_service.SightsRequest
	9,  // 15: services.trip_service.TripService.GetAlbumsByUser:input_type -> services.trip_service.ByUserRequest
	2,  // 16: services.trip_service.TripService.GetTrip:output_type -> services.trip_service.Trip
	2,  // 17: services.trip_service.TripService.AddTrip:output_type -> services.trip_service.Trip
	2,  // 18: services.trip_service.TripService.UpdateTrip:output_type -> services.trip_service.Trip
	12, // 19: services.trip_service.TripService.DeleteTrip:output_type -> google.protobuf.Empty
	10, // 20: services.trip_service.TripService.GetTripsByUser:output_type -> services.trip_service.Trips
	5,  // 21: services.trip_service.TripService.GetAlbum:output_type -> services.trip_service.Album
	5,  // 22: services.trip_service.TripService.AddAlbum:output_type -> services.trip_service.Album
	5,  // 23: services.trip_service.TripService.UpdateAlbum:output_type -> services.trip_service.Album
	12, // 24: services.trip_service.TripService.DeleteAlbum:output_type -> google.protobuf.Empty
	8,  // 25: services.trip_service.TripService.SightsByTrip:output_type -> services.trip_service.Sights
	11, // 26: services.trip_service.TripService.GetAlbumsByUser:output_type -> services.trip_service.Albums
	16, // [16:27] is the sub-list for method output_type
	5,  // [5:16] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_services_trip_api_proto_init() }
func file_pkg_services_trip_api_proto_init() {
	if File_pkg_services_trip_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_services_trip_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyTripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Album); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyAlbumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SightsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_services_trip_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Albums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_services_trip_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_services_trip_api_proto_goTypes,
		DependencyIndexes: file_pkg_services_trip_api_proto_depIdxs,
		MessageInfos:      file_pkg_services_trip_api_proto_msgTypes,
	}.Build()
	File_pkg_services_trip_api_proto = out.File
	file_pkg_services_trip_api_proto_rawDesc = nil
	file_pkg_services_trip_api_proto_goTypes = nil
	file_pkg_services_trip_api_proto_depIdxs = nil
}
