syntax = "proto3";

package services.sight_service;
option go_package = "snakealive/m/pkg/services/sight;sight_service";

import "third_party/go-proto-validators/validator.proto";

message Tag {
  int64 id = 1;
  string name = 2;
}

message Sight {
  int64 id = 1;
  string name = 2;
  string country = 3;
  float rating = 4;
  repeated string tags = 5;
  string description = 6;
  repeated string photos = 7;
  float lat = 8;
  float lng = 9;
}

message GetSightsByIDsRequest {
  repeated int64 ids = 1;
}

message GetSightsByIDsResponse {
  repeated Sight sights = 1;
}

message GetSightsRequest {
  string countryName = 1 [(validate.rules).string = {
    max_len: 128,
    min_bytes: 1,
  }];
}

message GetSightsReponse {
  repeated Sight sights = 1;
}

message GetSightRequest {
  int64 id = 1 [(validate.rules).int64 = {
    gt: 0,
  }];
}

message GetSightResponse {
  Sight sight = 1;
}

message SearchSightRequest {
  string search = 1;
  int64 skip = 2 [(validate.rules).int64 = {
    gte: 0,
  }];
  int64 limit = 3 [(validate.rules).int64 = {
    gte: 0,
  }];
  repeated string countries = 4;
  repeated int64 tags = 5;
}

message SearchSightResponse {
  repeated Sight sights = 1;
}

message GetSightsByTagRequest {
  int64 tag = 1 [(validate.rules).int64 = {
    gte: 0,
  }];
}

message GetSightsByTagResponse {
  repeated Sight sights = 1;
}

message GetTagsRequest {}

message GetTagsResponse {
  repeated Tag tags =1;
}

service SightService {
  rpc GetSights(GetSightsRequest) returns (GetSightsReponse) {};
  rpc GetSight(GetSightRequest) returns (GetSightResponse) {};
  rpc GetSightsByIDs(GetSightsByIDsRequest) returns (GetSightsByIDsResponse) {};
  rpc SearchSights(SearchSightRequest) returns (SearchSightResponse) {};
  rpc GetSightsByTag(GetSightsByTagRequest) returns (GetSightsByTagResponse) {};
  rpc GetTags(GetTagsRequest) returns (GetTagsResponse) {};
  rpc GetRandomTags(GetTagsRequest) returns (GetTagsResponse) {};
}