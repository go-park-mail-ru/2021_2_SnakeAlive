# build binary
FROM golang:1.14.4-alpine AS build

ARG GOOS
ENV CGO_ENABLED=0 \
    GOOS=$GOOS \
    GOARCH=amd64 \
    CGO_CPPFLAGS="-I/usr/include" \
    UID=0 GID=0 \
    CGO_CFLAGS="-I/usr/include" \
    CGO_LDFLAGS="-L/usr/lib -lpthread -lrt -lstdc++ -lm -lc -lgcc -lz " \
    PKG_CONFIG_PATH="/usr/lib/pkgconfig"

RUN --mount=type=secret,id=S3_ID \
  --mount=type=secret,id=SQL_CONN \
   export S3_ID=$(cat /run/secrets/S3_ID) && \
   export GATEWAY_DB_URL=$(cat /run/secrets/SQL_CONN)

ARG APP_PKG_NAME
WORKDIR /go/src/$APP_PKG_NAME
COPY ./cmd ./cmd
COPY ./internal ./internal
COPY ./pkg ./pkg
COPY ./third_party ./third_party
COPY ./vendor ./vendor

RUN go build -v \
    -o /out/service \
    ./cmd/gateway/main.go

FROM alpine:3.8
WORKDIR /app
COPY --from=build /out/service /app/server
CMD ["/app/server"]