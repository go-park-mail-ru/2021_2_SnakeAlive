name: tripadvisor prepare

on:
  pull_request:
    branches: [ main, develop, pre-develop ]
  push:
    branches: [ main, develop, pre-develop ]

permissions:
  contents: read
  pull-requests: read

jobs:
  vet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.1'
      - run: go vet ./...
      - run: go fmt ./...

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.1'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.1'
      - run: go test ./...

  deploy:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: vendor
        run: go mod vendor
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.HUB_USER }}
          password: ${{ secrets.HUB_TOKEN }}

      - name: build && push docker image
        env:
          S3_KEY: ${{ secrets.S3_KEY }}
          S3_ID: ${{ secrets.S3_ID }}
          PSQL_CONN: aaaaaa
        run: cd deploy && docker-compose build && docker-compose push

      - name: running latest service
        uses: appleboy/ssh-action@master
        env:
          S3_KEY: ${{ secrets.S3_KEY }}
          S3_ID: ${{ secrets.S3_ID }}
          PSQL_CONN: ${{ secrets.PSQL_CONN }}
        with:
          host: ${{ secrets.DEST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd ${{ secrets.PATH }} &&
            export PSQL_CONN=${{ secrets.PSQL_CONN }} &&
            export S3_ID=${{ secrets.S3_ID }} &&
            export S3_KEY=${{ secrets.S3_KEY }} &&
            docker-compose stop &&
            docker-compose rm -f &&
            docker-compose pull &&
            docker-compose up -d

